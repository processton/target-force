var b=Object.defineProperty,w=Object.defineProperties;var C=Object.getOwnPropertyDescriptors;var S=Object.getOwnPropertySymbols;var v=Object.prototype.hasOwnProperty,X=Object.prototype.propertyIsEnumerable;var R=(t,e,r)=>e in t?b(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,E=(t,e)=>{for(var r in e||(e={}))v.call(e,r)&&R(t,r,e[r]);if(S)for(var r of S(e))X.call(e,r)&&R(t,r,e[r]);return t},A=(t,e)=>w(t,C(e));import{c as commonjsGlobal,g as getDefaultExportFromCjs,d as SeoMeta,C as Cookies,m as mapState,n as normalizeComponent,s as store,e as axios}from"./app.js";import{O as OpenCompleteForm}from"./OpenCompleteForm.js";import"./vform.es.js";import"./OpenForm.js";import"./index2.js";import"./Collapse.js";import"./FormCleanings.js";var sha256$1={exports:{}};/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */(function(module){(function(){var ERROR="input is invalid type",WINDOW=typeof window=="object",root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&typeof self=="object",NODE_JS=!root.JS_SHA256_NO_NODE_JS&&typeof process=="object"&&process.versions&&process.versions.node;NODE_JS?root=commonjsGlobal:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&!0&&module.exports,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&typeof ArrayBuffer!="undefined",HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];(root.JS_SHA256_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(t){return Object.prototype.toString.call(t)==="[object Array]"}),ARRAY_BUFFER&&(root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(t){return typeof t=="object"&&t.buffer&&t.buffer.constructor===ArrayBuffer});var createOutputMethod=function(t,e){return function(r){return new Sha256(e,!0).update(r)[t]()}},createMethod=function(t){var e=createOutputMethod("hex",t);NODE_JS&&(e=nodeWrap(e,t)),e.create=function(){return new Sha256(t)},e.update=function(a){return e.create().update(a)};for(var r=0;r<OUTPUT_TYPES.length;++r){var i=OUTPUT_TYPES[r];e[i]=createOutputMethod(i,t)}return e},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(t){if(typeof t=="string")return crypto.createHash(algorithm).update(t,"utf8").digest("hex");if(t==null)throw new Error(ERROR);return t.constructor===ArrayBuffer&&(t=new Uint8Array(t)),Array.isArray(t)||ArrayBuffer.isView(t)||t.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(t)).digest("hex"):method(t)};return nodeMethod},createHmacOutputMethod=function(t,e){return function(r,i){return new HmacSha256(r,e,!0).update(i)[t]()}},createHmacMethod=function(t){var e=createHmacOutputMethod("hex",t);e.create=function(a){return new HmacSha256(a,t)},e.update=function(a,o){return e.create(a).update(o)};for(var r=0;r<OUTPUT_TYPES.length;++r){var i=OUTPUT_TYPES[r];e[i]=createHmacOutputMethod(i,t)}return e};function Sha256(t,e){e?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],t?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=t}Sha256.prototype.update=function(t){if(!this.finalized){var e,r=typeof t;if(r!=="string"){if(r==="object"){if(t===null)throw new Error(ERROR);if(ARRAY_BUFFER&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!Array.isArray(t)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(t)))throw new Error(ERROR)}else throw new Error(ERROR);e=!0}for(var i,a=0,o,n=t.length,s=this.blocks;a<n;){if(this.hashed&&(this.hashed=!1,s[0]=this.block,s[16]=s[1]=s[2]=s[3]=s[4]=s[5]=s[6]=s[7]=s[8]=s[9]=s[10]=s[11]=s[12]=s[13]=s[14]=s[15]=0),e)for(o=this.start;a<n&&o<64;++a)s[o>>2]|=t[a]<<SHIFT[o++&3];else for(o=this.start;a<n&&o<64;++a)i=t.charCodeAt(a),i<128?s[o>>2]|=i<<SHIFT[o++&3]:i<2048?(s[o>>2]|=(192|i>>6)<<SHIFT[o++&3],s[o>>2]|=(128|i&63)<<SHIFT[o++&3]):i<55296||i>=57344?(s[o>>2]|=(224|i>>12)<<SHIFT[o++&3],s[o>>2]|=(128|i>>6&63)<<SHIFT[o++&3],s[o>>2]|=(128|i&63)<<SHIFT[o++&3]):(i=65536+((i&1023)<<10|t.charCodeAt(++a)&1023),s[o>>2]|=(240|i>>18)<<SHIFT[o++&3],s[o>>2]|=(128|i>>12&63)<<SHIFT[o++&3],s[o>>2]|=(128|i>>6&63)<<SHIFT[o++&3],s[o>>2]|=(128|i&63)<<SHIFT[o++&3]);this.lastByteIndex=o,this.bytes+=o-this.start,o>=64?(this.block=s[16],this.start=o-64,this.hash(),this.hashed=!0):this.start=o}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,e=this.lastByteIndex;t[16]=this.block,t[e>>2]|=EXTRA[e&3],this.block=t[16],e>=56&&(this.hashed||this.hash(),t[0]=this.block,t[16]=t[1]=t[2]=t[3]=t[4]=t[5]=t[6]=t[7]=t[8]=t[9]=t[10]=t[11]=t[12]=t[13]=t[14]=t[15]=0),t[14]=this.hBytes<<3|this.bytes>>>29,t[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var t=this.h0,e=this.h1,r=this.h2,i=this.h3,a=this.h4,o=this.h5,n=this.h6,s=this.h7,h=this.blocks,c,x,l,u,f,d,m,p,F,H,_;for(c=16;c<64;++c)f=h[c-15],x=(f>>>7|f<<25)^(f>>>18|f<<14)^f>>>3,f=h[c-2],l=(f>>>17|f<<15)^(f>>>19|f<<13)^f>>>10,h[c]=h[c-16]+x+h[c-7]+l<<0;for(_=e&r,c=0;c<64;c+=4)this.first?(this.is224?(p=300032,f=h[0]-1413257819,s=f-150054599<<0,i=f+24177077<<0):(p=704751109,f=h[0]-210244248,s=f-1521486534<<0,i=f+143694565<<0),this.first=!1):(x=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),l=(a>>>6|a<<26)^(a>>>11|a<<21)^(a>>>25|a<<7),p=t&e,u=p^t&r^_,m=a&o^~a&n,f=s+l+m+K[c]+h[c],d=x+u,s=i+f<<0,i=f+d<<0),x=(i>>>2|i<<30)^(i>>>13|i<<19)^(i>>>22|i<<10),l=(s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7),F=i&t,u=F^i&e^p,m=s&a^~s&o,f=n+l+m+K[c+1]+h[c+1],d=x+u,n=r+f<<0,r=f+d<<0,x=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10),l=(n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7),H=r&i,u=H^r&t^F,m=n&s^~n&a,f=o+l+m+K[c+2]+h[c+2],d=x+u,o=e+f<<0,e=f+d<<0,x=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),l=(o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7),_=e&r,u=_^e&i^H,m=o&n^~o&s,f=a+l+m+K[c+3]+h[c+3],d=x+u,a=t+f<<0,t=f+d<<0;this.h0=this.h0+t<<0,this.h1=this.h1+e<<0,this.h2=this.h2+r<<0,this.h3=this.h3+i<<0,this.h4=this.h4+a<<0,this.h5=this.h5+o<<0,this.h6=this.h6+n<<0,this.h7=this.h7+s<<0},Sha256.prototype.hex=function(){this.finalize();var t=this.h0,e=this.h1,r=this.h2,i=this.h3,a=this.h4,o=this.h5,n=this.h6,s=this.h7,h=HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[t&15]+HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[e&15]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[r&15]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[i&15]+HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[a&15]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[o&15]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[n&15];return this.is224||(h+=HEX_CHARS[s>>28&15]+HEX_CHARS[s>>24&15]+HEX_CHARS[s>>20&15]+HEX_CHARS[s>>16&15]+HEX_CHARS[s>>12&15]+HEX_CHARS[s>>8&15]+HEX_CHARS[s>>4&15]+HEX_CHARS[s&15]),h},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var t=this.h0,e=this.h1,r=this.h2,i=this.h3,a=this.h4,o=this.h5,n=this.h6,s=this.h7,h=[t>>24&255,t>>16&255,t>>8&255,t&255,e>>24&255,e>>16&255,e>>8&255,e&255,r>>24&255,r>>16&255,r>>8&255,r&255,i>>24&255,i>>16&255,i>>8&255,i&255,a>>24&255,a>>16&255,a>>8&255,a&255,o>>24&255,o>>16&255,o>>8&255,o&255,n>>24&255,n>>16&255,n>>8&255,n&255];return this.is224||h.push(s>>24&255,s>>16&255,s>>8&255,s&255),h},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var t=new ArrayBuffer(this.is224?28:32),e=new DataView(t);return e.setUint32(0,this.h0),e.setUint32(4,this.h1),e.setUint32(8,this.h2),e.setUint32(12,this.h3),e.setUint32(16,this.h4),e.setUint32(20,this.h5),e.setUint32(24,this.h6),this.is224||e.setUint32(28,this.h7),t};function HmacSha256(t,e,r){var i,a=typeof t;if(a==="string"){var o=[],n=t.length,s=0,h;for(i=0;i<n;++i)h=t.charCodeAt(i),h<128?o[s++]=h:h<2048?(o[s++]=192|h>>6,o[s++]=128|h&63):h<55296||h>=57344?(o[s++]=224|h>>12,o[s++]=128|h>>6&63,o[s++]=128|h&63):(h=65536+((h&1023)<<10|t.charCodeAt(++i)&1023),o[s++]=240|h>>18,o[s++]=128|h>>12&63,o[s++]=128|h>>6&63,o[s++]=128|h&63);t=o}else if(a==="object"){if(t===null)throw new Error(ERROR);if(ARRAY_BUFFER&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!Array.isArray(t)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(t)))throw new Error(ERROR)}else throw new Error(ERROR);t.length>64&&(t=new Sha256(e,!0).update(t).array());var c=[],x=[];for(i=0;i<64;++i){var l=t[i]||0;c[i]=92^l,x[i]=54^l}Sha256.call(this,e,r),this.update(x),this.oKeyPad=c,this.inner=!0,this.sharedMemory=r}HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var t=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(t),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224)})()})(sha256$1);var sha256Exports=sha256$1.exports;const sha256=getDefaultExportFromCjs(sha256Exports),isFrame=window.location!==window.parent.location||window.frameElement;function handleDarkMode(t){const e=document.body;if(t.dark_mode==="dark")e.classList.add("dark");else if(t.dark_mode==="light")e.classList.remove("dark");else if(t.dark_mode==="auto"&&isFrame){let r;try{r=window.location.ancestorOrigins[0]}catch(i){r=window.location!==window.parent.location?document.referrer:document.location.href}r.includes(".notion.site")&&e.classList.remove("dark")}}function handleTransparentMode(t){if(!(window.location!==window.parent.location||window.frameElement)||!t.transparent_background)return;const r=document.getElementById("app");r.classList.remove("bg-white"),r.classList.remove("dark:bg-notion-dark"),r.classList.add("bg-transparent")}function loadForm(t){if(!store.state["open/forms"].loading)return store.commit("open/forms/startLoading"),axios.get("/api/forms/"+t).then(e=>{const r=e.data;if(store.commit("open/forms/set",[e.data]),r.custom_code){const i=document.createRange().createContextualFragment(r.custom_code);document.head.append(i)}handleDarkMode(r),handleTransparentMode(r),store.commit("open/forms/stopLoading")}).catch(()=>{store.commit("open/forms/stopLoading")})}const _sfc_main={components:{OpenCompleteForm},mixins:[SeoMeta],beforeRouteEnter(t,e,r){window.$crisp&&window.$crisp.push(["do","chat:hide"]),r()},beforeRouteLeave(t,e,r){window.$crisp&&window.$crisp.push(["do","chat:show"]),r()},data(){return{submitted:!1}},mounted(){loadForm(this.formSlug).then(()=>{if(this.isIframe)return;const t=[];document.querySelectorAll('input,button,textarea,[role="button"]').forEach(e=>{(e.offsetWidth!==0||e.offsetHeight!==0)&&t.push(e)}),t.length>0&&t[0].focus()})},methods:{passwordEntered(t){Cookies.set("password-"+this.form.slug,sha256(t),{expires:7,sameSite:"None",secure:!0}),loadForm(this.formSlug).then(()=>{this.form.is_password_protected&&this.$refs["open-complete-form"].addPasswordError("Invalid password.")})}},computed:A(E({},mapState({forms:t=>t["open/forms"].content,formLoading:t=>t["open/forms"].loading,recordLoading:t=>t["open/records"].loading})),{formSlug(){return this.$route.params.slug},form(){return this.$store.getters["open/forms/getBySlug"](this.formSlug)},isIframe(){return window.location!==window.parent.location||window.frameElement},metaTitle(){return this.form&&this.form.is_pro&&this.form.seo_meta.page_title?this.form.seo_meta.page_title:this.form?this.form.title:"Create beautiful forms"},metaTemplate(){return this.form&&this.form.is_pro&&this.form.seo_meta.page_title?"%s":null},metaDescription(){return this.form&&this.form.is_pro&&this.form.seo_meta.page_description?this.form.seo_meta.page_description:this.form&&this.form.description?this.form.description.substring(0,160):null},metaImage(){return this.form&&this.form.is_pro&&this.form.seo_meta.page_thumbnail?this.form.seo_meta.page_thumbnail:this.form&&this.form.cover_picture?this.form.cover_picture:null},metaTags(){return this.form&&this.form.can_be_indexed?[]:[{name:"robots",content:"noindex"}]}})};var _sfc_render=function t(){var e=this,r=e._self._c;return r("div",{staticClass:"flex flex-col"},[e.form&&!e.isIframe&&(e.form.logo_picture||e.form.cover_picture)?r("div",[e.form.cover_picture?r("div",[r("div",{staticClass:"max-h-56 w-full overflow-hidden flex items-center justify-center",attrs:{id:"cover-picture"}},[r("img",{staticClass:"w-full",attrs:{alt:"Form Cover Picture",src:e.form.cover_picture}})])]):e._e(),e.form.logo_picture?r("div",{staticClass:"w-full p-5 relative mx-auto",class:{"pt-20":!e.form.cover_picture,"md:w-3/5 lg:w-1/2 md:max-w-2xl":e.form.width==="centered","max-w-7xl":e.form.width==="full"&&!e.isIframe}},[r("img",{staticClass:"w-20 h-20 object-contain absolute left-5 transition-all",class:{"top-5":!e.form.cover_picture,"-top-10":e.form.cover_picture},attrs:{alt:"Logo Picture",src:e.form.logo_picture}})]):e._e()]):e._e(),r("div",{staticClass:"w-full mx-auto px-4",class:{"mt-6":!e.isIframe,"md:w-3/5 lg:w-1/2 md:max-w-2xl":e.form&&e.form.width==="centered","max-w-7xl":e.form&&e.form.width==="full"&&!e.isIframe}},[!e.formLoading&&!e.form?r("div",[r("h1",{staticClass:"mt-6",domProps:{textContent:e._s("Whoops")}}),r("p",{staticClass:"mt-6"},[e._v(" Unfortunately we could not find this form. It may have been deleted by it's author. ")]),r("p",{staticClass:"mb-10 mt-4"},[r("router-link",{attrs:{to:{name:"welcome"}}},[e._v(" Create your form for free with ")])],1)]):e.formLoading?r("div",[r("p",{staticClass:"text-center mt-6 p-4"},[r("loader",{staticClass:"h-6 w-6 text-nt-blue mx-auto"})],1)]):[e.recordLoading?r("div",[r("p",{staticClass:"text-center mt-6 p-4"},[r("loader",{staticClass:"h-6 w-6 text-nt-blue mx-auto"})],1)]):e._e(),r("open-complete-form",{directives:[{name:"show",rawName:"v-show",value:!e.recordLoading,expression:"!recordLoading"}],ref:"open-complete-form",staticClass:"mb-10",attrs:{form:e.form},on:{"password-entered":e.passwordEntered}})]],2)])},_sfc_staticRenderFns=[],__component__=normalizeComponent(_sfc_main,_sfc_render,_sfc_staticRenderFns,!1,null,null,null,null);const showPublic=__component__.exports;export{showPublic as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
