import{e as m}from"./app.js";var j=Object.defineProperty,O=Object.prototype.hasOwnProperty,d=Object.getOwnPropertySymbols,A=Object.prototype.propertyIsEnumerable,f=(e,s,t)=>s in e?j(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t,a=(e,s)=>{for(var t in s||(s={}))O.call(s,t)&&f(e,t,s[t]);if(d)for(var t of d(s))A.call(s,t)&&f(e,t,s[t]);return e};const l=e=>e===void 0,p=e=>Array.isArray(e),y=e=>e&&typeof e.size=="number"&&typeof e.type=="string"&&typeof e.slice=="function",u=(e,s,t,o)=>((s=s||{}).indices=!l(s.indices)&&s.indices,s.nullsAsUndefineds=!l(s.nullsAsUndefineds)&&s.nullsAsUndefineds,s.booleansAsIntegers=!l(s.booleansAsIntegers)&&s.booleansAsIntegers,s.allowEmptyArrays=!l(s.allowEmptyArrays)&&s.allowEmptyArrays,t=t||new FormData,l(e)||(e===null?s.nullsAsUndefineds||t.append(o,""):(r=>typeof r=="boolean")(e)?s.booleansAsIntegers?t.append(o,e?1:0):t.append(o,e):p(e)?e.length?e.forEach((r,n)=>{const c=o+"["+(s.indices?n:"")+"]";u(r,s,t,c)}):s.allowEmptyArrays&&t.append(o+"[]",""):(r=>r instanceof Date)(e)?t.append(o,e.toISOString()):!(r=>r===Object(r))(e)||(r=>y(r)&&typeof r.name=="string"&&(typeof r.lastModifiedDate=="object"||typeof r.lastModified=="number"))(e)||y(e)?t.append(o,e):Object.keys(e).forEach(r=>{const n=e[r];if(p(n))for(;r.length>2&&r.lastIndexOf("[]")===r.length-2;)r=r.substring(0,r.length-2);u(n,s,t,o?o+"["+r+"]":r)})),t);var w={serialize:u};function h(e){if(e===null||typeof e!="object")return e;const s=Array.isArray(e)?[]:{};return Object.keys(e).forEach(t=>{s[t]=h(e[t])}),s}function b(e){return Array.isArray(e)?e:[e]}function g(e){return e instanceof File||e instanceof Blob||e instanceof FileList||typeof e=="object"&&e!==null&&Object.values(e).find(s=>g(s))!==void 0}class E{constructor(){this.errors={},this.errors={}}set(s,t){typeof s=="object"?this.errors=s:this.set(a(a({},this.errors),{[s]:b(t)}))}all(){return this.errors}has(s){return Object.prototype.hasOwnProperty.call(this.errors,s)}hasAny(...s){return s.some(t=>this.has(t))}any(){return Object.keys(this.errors).length>0}get(s){if(this.has(s))return this.getAll(s)[0]}getAll(s){return b(this.errors[s]||[])}only(...s){const t=[];return s.forEach(o=>{const r=this.get(o);r&&t.push(r)}),t}flatten(){return Object.values(this.errors).reduce((s,t)=>s.concat(t),[])}clear(s){const t={};s&&Object.keys(this.errors).forEach(o=>{o!==s&&(t[o]=this.errors[o])}),this.set(t)}}class i{constructor(s={}){this.originalData={},this.busy=!1,this.successful=!1,this.recentlySuccessful=!1,this.recentlySuccessfulTimeoutId=void 0,this.errors=new E,this.progress=void 0,this.update(s)}static make(s){return new this(s)}update(s){this.originalData=Object.assign({},this.originalData,h(s)),Object.assign(this,s)}fill(s={}){this.keys().forEach(t=>{this[t]=s[t]})}data(){return this.keys().reduce((s,t)=>a(a({},s),{[t]:this[t]}),{})}keys(){return Object.keys(this).filter(s=>!i.ignore.includes(s))}startProcessing(){this.errors.clear(),this.busy=!0,this.successful=!1,this.progress=void 0,this.recentlySuccessful=!1,clearTimeout(this.recentlySuccessfulTimeoutId)}finishProcessing(){this.busy=!1,this.successful=!0,this.progress=void 0,this.recentlySuccessful=!0,this.recentlySuccessfulTimeoutId=setTimeout(()=>{this.recentlySuccessful=!1},i.recentlySuccessfulTimeout)}clear(){this.errors.clear(),this.successful=!1,this.recentlySuccessful=!1,this.progress=void 0,clearTimeout(this.recentlySuccessfulTimeoutId)}reset(){Object.keys(this).filter(s=>!i.ignore.includes(s)).forEach(s=>{this[s]=h(this.originalData[s])})}get(s,t={}){return this.submit("get",s,t)}post(s,t={}){return this.submit("post",s,t)}patch(s,t={}){return this.submit("patch",s,t)}put(s,t={}){return this.submit("put",s,t)}delete(s,t={}){return this.submit("delete",s,t)}submit(s,t,o={}){return this.startProcessing(),o=a({data:{},params:{},url:this.route(t),method:s,onUploadProgress:this.handleUploadProgress.bind(this)},o),s.toLowerCase()==="get"?o.params=a(a({},this.data()),o.params):(o.data=a(a({},this.data()),o.data),g(o.data)&&!o.transformRequest&&(o.transformRequest=[r=>w.serialize(r)])),new Promise((r,n)=>{(i.axios||m).request(o).then(c=>{this.finishProcessing(),r(c)}).catch(c=>{this.handleErrors(c),n(c)})})}handleErrors(s){this.busy=!1,this.progress=void 0,s.response&&this.errors.set(this.extractErrors(s.response))}extractErrors(s){return s.data&&typeof s.data=="object"?s.data.errors?a({},s.data.errors):s.data.message?{error:s.data.message}:a({},s.data):{error:i.errorMessage}}handleUploadProgress(s){this.progress={total:s.total,loaded:s.loaded,percentage:Math.round(100*s.loaded/s.total)}}route(s,t={}){let o=s;return Object.prototype.hasOwnProperty.call(i.routes,s)&&(o=decodeURI(i.routes[s])),typeof t!="object"&&(t={id:t}),Object.keys(t).forEach(r=>{o=o.replace(`{${r}}`,t[r])}),o}onKeydown(s){const t=s.target;t.name&&this.errors.clear(t.name)}}i.routes={},i.errorMessage="Something went wrong. Please try again.",i.recentlySuccessfulTimeout=2e3,i.ignore=["busy","successful","errors","progress","originalData","recentlySuccessful","recentlySuccessfulTimeoutId"];export{i as g};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
