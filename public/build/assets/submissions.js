var u=(s,t,e)=>new Promise((r,o)=>{var a=l=>{try{c(e.next(l))}catch(p){o(p)}},i=l=>{try{c(e.throw(l))}catch(p){o(p)}},c=l=>l.done?r(l.value):Promise.resolve(l.value).then(a,i);c((e=e.apply(s,t)).next())});import{n,e as g,a as b,F as w,d as y}from"./app.js";import{g as x}from"./vform.es.js";import{c as d}from"./index2.js";const C="_wrap_16593_1",$={wrap:C,"scroll-container":"_scroll-container_16593_6","shadow-top":"_shadow-top_16593_10","shadow-right":"_shadow-right_16593_11","shadow-bottom":"_shadow-bottom_16593_12","shadow-left":"_shadow-left_16593_13","is-active":"_is-active_16593_59"};function f(s){if(typeof ResizeObserver!="undefined")return new ResizeObserver(t=>t.map(s))}const k={name:"ScrollShadow",props:{hideScrollbar:{type:Boolean,default:!1},shadowTopOffset:{type:Number,default:0}},data(){return{width:void 0,height:void 0,shadow:{top:!1,right:!1,bottom:!1,left:!1},debounceTimeout:null}},mounted(){window.addEventListener("resize",this.calcDimensions);const s=f(this.toggleShadow);s&&(s.observe(this.$refs.scrollContainer),this.$once("hook:destroyed",()=>s.disconnect()));const t=f(this.calcDimensions);t&&(t.observe(this.$el),this.$once("hook:destroyed",()=>t.disconnect()))},destroyed(){window.removeEventListener("resize",this.calcDimensions)},methods:{calcDimensions(){return u(this,null,function*(){this.width=void 0,this.height=void 0,yield this.$nextTick(),this.width=`${this.$el.clientWidth}px`,this.height=`${this.$el.clientHeight}px`})},toggleShadow(){const s=this.$refs.scrollContainer.clientWidth<this.$refs.scrollContainer.scrollWidth,t=this.$refs.scrollContainer.clientHeight<this.$refs.scrollContainer.scrollHeight,e=this.$refs.scrollContainer.offsetWidth+this.$refs.scrollContainer.scrollLeft,r=this.$refs.scrollContainer.offsetHeight+this.$refs.scrollContainer.scrollTop,o=this.$refs.scrollContainer.scrollTop===0,a=e>=this.$refs.scrollContainer.scrollWidth,i=r>=this.$refs.scrollContainer.scrollHeight,c=this.$refs.scrollContainer.scrollLeft===0;this.$nextTick(()=>{this.shadow.top=t&&!o,this.shadow.right=s&&!a,this.shadow.bottom=t&&!i,this.shadow.left=s&&!c})}}};var S=function(){var t=this,e=t._self._c;return e("div",{staticClass:"scroll-shadow max-w-full",class:[t.$style.wrap,{"w-max":!t.shadow.left&&!t.shadow.right}]},[e("div",{ref:"scrollContainer",class:[t.$style["scroll-container"],{"no-scrollbar":t.hideScrollbar}],style:{width:t.width?t.width:"auto",height:t.height},on:{"&scroll":function(r){return t.toggleShadow.apply(null,arguments)}}},[t._t("default"),e("span",{class:[t.$style["shadow-top"],t.shadow.top&&t.$style["is-active"]],style:{top:t.shadowTopOffset+"px"}}),e("span",{class:[t.$style["shadow-right"],t.shadow.right&&t.$style["is-active"]]}),e("span",{class:[t.$style["shadow-bottom"],t.shadow.bottom&&t.$style["is-active"]]}),e("span",{class:[t.$style["shadow-left"],t.shadow.left&&t.$style["is-active"]]})],2)])},D=[];const m={$style:$};function O(s){for(var t in m)this[t]=m[t]}var F=n(k,S,D,!1,O,null,null,null);const L=F.exports,R={components:{},props:{value:{required:!0}},data(){return{}},computed:{valueIsObject(){return typeof this.value=="object"&&!Array.isArray(this.value)&&this.value!==null}},mounted(){},methods:{getColor(s){return{red:"#e03e3e",gray:"#9b9a97",brown:"#64473a",orange:"#d9730d",yellow:"#dfab01",teal:"#0f7b6c",blue:"#0b6e99",purple:"#6940a5",pink:"#ad1a72"}[s]},getBgColor(s){return{red:"#fbe4e4",gray:"#ebeced",brown:"#e9e5e3",orange:"#faebdd",yellow:"#fbf3db",teal:"#ddedea",blue:"#ddebf1",purple:"#eae4f2",pink:"#f4dfeb"}[s]}}};var I=function(){var t=this,e=t._self._c;return t.valueIsObject?e("span",t._l(t.value.responseData,function(r,o){return e("span",{key:o,class:{"font-semibold":r.annotations.bold&&!r.annotations.code,italic:r.annotations.italic,"line-through":r.annotations.strikethrough,underline:r.annotations.underline,"bg-pink-100 py-1 px-2 rounded-lg text-pink-500":r.annotations.code,"font-serif":r.type=="equation"},style:{color:r.annotations.color!="default"?t.getColor(r.annotations.color):null,"background-color":r.annotations.color!="default"&&r.annotations.color.split("_")[1]?t.getBgColor(r.annotations.color.split("_")[0]):"none"}},[r.href?e("a",{staticClass:"text-blue-600 underline",attrs:{href:r.href,rel:"noopener noreferrer",target:"_blank"}},[t._v(t._s(r.plain_text))]):r.href?t._e():e("span",[t._v(t._s(r.plain_text))])])}),0):e("span",[t._v(" "+t._s(t.value)+" ")])},z=[],H=n(R,I,z,!1,null,null,null,null);const h=H.exports,E={components:{},props:{value:{required:!0}},mounted(){},data(){return{}},computed:{},methods:{}};var T=function(){var t=this,e=t._self._c;return e("a",{staticClass:"text-gray-700 dark:text-gray-300 hover:underline",attrs:{href:t.value,target:"_blank",rel:"nofollow"}},[t._v(t._s(t.value))])},j=[],M=n(E,T,j,!1,null,null,null,null);const B=M.exports;const A={components:{},props:{opt:{type:String,required:!0}},data(){return{}},computed:{},mounted(){},methods:{}};var q=function(){var t=this,e=t._self._c;return e("span",{staticClass:"py-1 px-2 mb-1 open-tag default mr-2 text-gray-700 dark:text-gray-300 text-xs whitespace-nowrap rounded-md transition-colors",attrs:{id:t.opt}},[t._v(" "+t._s(t.opt)+" ")])},P=[],W=n(A,q,P,!1,null,null,null,null);const N=W.exports,U={components:{OpenTag:N},props:{value:{type:Object|null,required:!0}},data(){return{}},computed:{valueIsObject(){return typeof this.value=="object"&&this.value!==null}},mounted(){},methods:{}};var J=function(){var t=this,e=t._self._c;return t.value?e("span",{staticClass:"-mb-2"},[t.valueIsObject?t._l(t.value,function(r,o){return e("open-tag",{key:o,attrs:{opt:r}})}):e("open-tag",{attrs:{opt:t.value}})],2):t._e()},V=[],X=n(U,J,V,!1,null,null,null,null);const _=X.exports,Z={components:{},props:{value:{required:!0}},data(){return{}},computed:{valueIsObject(){return typeof this.value=="object"&&this.value!==null}},mounted(){},methods:{}};var G=function(){var t=this,e=t._self._c;return t.valueIsObject?e("span",[t.value[0]?[t._v(t._s(t.value[0]))]:t._e(),t.value[1]?[e("b",[t._v("to")]),t._v(" "+t._s(t.value[1]))]:t._e()],2):e("span",[t._v(" "+t._s(t.value)+" ")])},K=[],Q=n(Z,G,K,!1,null,null,null,null);const Y=Q.exports;const tt={components:{},props:{value:{type:Array,required:!1}},data(){return{}},computed:{},mounted(){},methods:{isImage(s){return["png","gif","jpg","jpeg","tif"].some(t=>s&&s.endsWith(t))},displayedFileName(s){const t=s.substr(s.lastIndexOf(".")+1),e=s.substr(0,s.lastIndexOf("."));return e.length>12?e.substr(0,12)+"(...)."+t:e+"."+t}}};var et=function(){var t=this,e=t._self._c;return e("p",{staticClass:"text-xs"},t._l(t.value,function(r){return e("span",{key:r.file_url,staticClass:"whitespace-nowrap rounded-md transition-colors hover:decoration-none",class:{"open-file text-gray-700 dark:text-gray-300 truncate":!t.isImage(r.file_url),"open-file-img":t.isImage(r.file_url)}},[e("a",{staticClass:"text-gray-700 dark:text-gray-300",attrs:{href:r.file_url,target:"_blank",rel:"nofollow"}},[t.isImage(r.file_url)?e("div",{staticClass:"w-8 h-8"},[e("img",{staticClass:"object-cover h-full w-full rounded",attrs:{src:r.file_url}})]):e("span",{staticClass:"py-1 px-2"},[e("a",{attrs:{href:r.file_url,target:"_blank",download:""}},[t._v(t._s(t.displayedFileName(r.file_name)))])])])])}),0)},st=[],rt=n(tt,et,st,!1,null,null,null,null);const v=rt.exports,ot={components:{},props:{value:{required:!0}},mounted(){},data(){return{}},computed:{},methods:{}};var at=function(){var t=this,e=t._self._c;return t.value===!0?e("svg",{staticClass:"h-4 w-4 mx-auto",attrs:{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor","stroke-width":"2"}},[e("path",{attrs:{"stroke-linecap":"round","stroke-linejoin":"round",d:"M5 13l4 4L19 7"}})]):t.value===!1?e("svg",{staticClass:"h-4 w-4 mx-auto",attrs:{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor","stroke-width":"2"}},[e("path",{attrs:{"stroke-linecap":"round","stroke-linejoin":"round",d:"M6 18L18 6M6 6l12 12"}})]):t._e()},nt=[],lt=n(ot,at,nt,!1,null,null,null,null);const it=lt.exports,ct={components:{},props:{allowResize:{required:!0},width:{required:!0}},data(){return{x:0,w:0}},computed:{},mounted(){},methods:{mouseDownHandler(s){this.x=s.clientX;const t=window.getComputedStyle(this.$refs.th);this.w=parseInt(t.width,10),document.addEventListener("mousemove",this.mouseMoveHandler),document.addEventListener("mouseup",this.mouseUpHandler)},mouseMoveHandler(s){const t=s.clientX-this.x;this.$emit("resize-width",this.w+t)},mouseUpHandler(){document.removeEventListener("mousemove",this.mouseMoveHandler),document.removeEventListener("mouseup",this.mouseUpHandler)}}};var dt=function(){var t=this,e=t._self._c;return e("th",{ref:"th",style:{width:t.width}},[t._t("default"),t.allowResize?e("div",{staticClass:"absolute right-0 top-0 w-0 z-10"},[e("div",{staticClass:"resize-handler bg-transparent cursor-move hover:bg-blue-500 opacity-80 transition-colors",on:{mousedown:t.mouseDownHandler}})]):t._e()],2)},ut=[],ht=n(ct,dt,ut,!1,null,null,null,null);const pt=ht.exports,ft={components:{},props:{form:{type:Object,required:!0},structure:{type:Array,default:()=>[]},rowid:{type:Number,default:()=>{}}},data(){return{}},computed:{},mounted(){},methods:{onDeleteClick(){this.alertConfirm("Do you really want to delete this record?",this.deleteRecord)},deleteRecord(){return u(this,null,function*(){g.delete("/api/open/forms/"+this.form.id+"/records/"+this.rowid+"/delete").then(s=>u(this,null,function*(){s.data.type==="success"?(this.$emit("deleted"),this.alertSuccess(s.data.message)):this.alertError("Something went wrong!")})).catch(s=>{this.alertError(s.response.data.message)})})}}};var mt=function(){var t=this,e=t._self._c;return e("div",{staticClass:"flex items-center justify-center space-x-1"},[e("button",{directives:[{name:"track",rawName:"v-track.delete_record_click",modifiers:{delete_record_click:!0}}],staticClass:"border rounded py-1 px-2 text-gray-500 dark:text-gray-400 hover:text-red-700",on:{click:t.onDeleteClick}},[e("svg",{staticClass:"w-4 h-4",attrs:{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"1.5",stroke:"currentColor"}},[e("path",{attrs:{"stroke-linecap":"round","stroke-linejoin":"round",d:"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0"}})])])])},_t=[],vt=n(ft,mt,_t,!1,null,null,null,null);const gt=vt.exports;const bt=function(s,t=0){let e=3735928559^t,r=1103547991^t;for(let o=0,a;o<s.length;o++)a=s.charCodeAt(o),e=Math.imul(e^a,2654435761),r=Math.imul(r^a,1597334677);return e=Math.imul(e^e>>>16,2246822507)^Math.imul(r^r>>>13,3266489909),r=Math.imul(r^r>>>16,2246822507)^Math.imul(e^e>>>13,3266489909),4294967296*(2097151&r)+(e>>>0)},wt={components:{ResizableTh:pt,RecordOperations:gt},props:{data:{type:Array,default:()=>[]},loading:{type:Boolean,default:!1},allowResize:{required:!1,default:!0,type:Boolean}},data(){return{tableHash:null,skip:!1}},computed:{form:{get(){return this.$store.state["open/working_form"].content},set(s){this.$store.commit("open/working_form/set",s)}},hasActions(){return!0},fieldComponents(){return{text:h,number:h,select:_,multi_select:_,date:Y,files:v,checkbox:it,url:B,email:h,phone_number:h,signature:v}}},watch:{"form.properties":{handler(){this.onStructureChange()},deep:!0},data(){this.$nextTick(()=>{this.handleScroll()})}},mounted(){const s=document.getElementById("table-page");this.tableHash=bt(JSON.stringify(this.form.properties)),s.addEventListener("scroll",this.handleScroll,{passive:!0}),window.addEventListener("resize",this.handleScroll),this.onStructureChange(),this.handleScroll()},beforeDestroy(){const s=document.getElementById("table-page");s&&s.removeEventListener("scroll",this.handleScroll),window.removeEventListener("resize",this.handleScroll)},methods:{colClasses(s){let t,e,r,o;return t=`text-${s.alignment?s.alignment:"left"}`,e=null,(!s.hasOwnProperty("color")||s.color==="default")&&(e="text-gray-700 dark:text-gray-300"),e=`text-${s.color}`,s.hasOwnProperty("bold")&&s.bold&&(r="font-semibold"),(!s.hasOwnProperty("wrap_text")||!s.wrap_text)&&(o="truncate"),[t,e,o,r]},onStructureChange(){this.form&&this.form.properties&&this.$nextTick(()=>{this.form.properties.forEach(s=>{s.hasOwnProperty("cell_width")||this.allowResize&&this.form!==null&&document.getElementById("table-head-cell-"+s.id)&&this.resizeCol(s,document.getElementById("table-head-cell-"+s.id).offsetWidth)})})},resizeCol(s,t){if(!this.form)return;const e=d(this.form.properties),r=this.form.properties.findIndex(o=>o.id===s.id);e[r].cell_width=t,this.$set(this.form,"properties",e),this.$nextTick(()=>{this.$emit("resize")})},handleScroll(){const t=document.getElementById("table-page").getBoundingClientRect().top,e=Math.max(0,t-this.$refs.table.getBoundingClientRect().top),r=document.getElementById("table-header-"+this.tableHash);if(r&&(r.style.transform=`translate3d(0px, ${e}px, 0px)`,e>0?r.classList.add("border-t"):r.classList.remove("border-t")),this.$slots.hasOwnProperty("actions")){const o=document.getElementById("table-actions-"+this.tableHash);if(o)if(e>100)o.style.transform=`translate3d(0px, ${e+33}px, 0px)`;else{const a=document.getElementById("table-page");o.style.transform=`translate3d(0px, ${a.offsetHeight+(t-this.$refs.table.getBoundingClientRect().top)-35}px, 0px)`}}}}};var yt=function(){var t=this,e=t._self._c;return e("table",{ref:"table",staticClass:"notion-table n-table whitespace-no-wrap bg-white dark:bg-notion-dark-light relative",attrs:{id:"table-"+t.tableHash}},[e("thead",{ref:"header",staticClass:"n-table-head top-0",class:{absolute:t.data.length!==0},staticStyle:{"will-change":"transform",transform:"translate3d(0px, 0px, 0px)"},attrs:{id:"table-header-"+t.tableHash}},[e("tr",{staticClass:"n-table-row overflow-x-hidden"},[t._l(t.form.properties,function(r,o){return e("resizable-th",{key:r.id,staticClass:"n-table-cell p-0 relative",attrs:{id:"table-head-cell-"+r.id,scope:"col","allow-resize":t.allowResize,width:r.cell_width?r.cell_width+"px":"auto"},on:{"resize-width":function(a){return t.resizeCol(r,a)}}},[e("p",{staticClass:"bg-gray-50 dark:bg-notion-dark truncate sticky top-0 border-b border-gray-200 dark:border-gray-800 px-4 py-2 text-gray-500 font-semibold tracking-wider uppercase text-xs",class:{"border-r":o<t.form.properties.length-1||t.hasActions}},[t._v(" "+t._s(r.name)+" ")])])}),t.hasActions?e("th",{staticClass:"n-table-cell p-0 relative",staticStyle:{width:"100px"}},[e("p",{staticClass:"bg-gray-50 dark:bg-notion-dark truncate sticky top-0 border-b border-gray-200 dark:border-gray-800 px-4 py-2 text-gray-500 font-semibold tracking-wider uppercase text-xs"},[t._v(" Actions ")])]):t._e()],2)]),t.data.length>0?e("tbody",{staticClass:"n-table-body bg-white dark:bg-notion-dark-light"},[t.$slots.hasOwnProperty("actions")?e("tr",{ref:"actions-row",staticClass:"action-row absolute w-full",staticStyle:{"will-change":"transform",transform:"translate3d(0px, 32px, 0px)"},attrs:{id:"table-actions-"+t.tableHash}},[e("td",{staticClass:"p-1",attrs:{colspan:t.form.properties.length}},[t._t("actions")],2)]):t._e(),t._l(t.data,function(r,o){return e("tr",{key:o,staticClass:"n-table-row",class:{first:o===0}},[t._l(t.form.properties,function(a,i){return e("td",{key:a.id,staticClass:"n-table-cell border-gray-100 dark:border-gray-900 text-sm p-2 overflow-hidden",class:[{"border-b":o!==t.data.length-1,"border-r":i!==t.form.properties.length-1||t.hasActions},t.colClasses(a)],style:{width:a.cell_width+"px"}},[e(t.fieldComponents[a.type],{tag:"component",staticClass:"border-gray-100 dark:border-gray-900",attrs:{property:a,value:r[a.id]}})],1)}),t.hasActions?e("td",{staticClass:"n-table-cell border-gray-100 dark:border-gray-900 text-sm p-2 border-b",staticStyle:{width:"100px"}},[e("record-operations",{attrs:{form:t.form,structure:t.form.properties,rowid:r.id},on:{deleted:function(a){return t.$emit("deleted")}}})],1):t._e()],2)}),t.loading?e("tr",{staticClass:"n-table-row border-t bg-gray-50 dark:bg-gray-900"},[e("td",{staticClass:"p-8 w-full",attrs:{colspan:t.form.properties.length}},[e("loader",{staticClass:"w-4 h-4 mx-auto"})],1)]):t._e()],2):e("tbody",{key:"body-content",staticClass:"n-table-body"},[e("tr",{staticClass:"n-table-row loader w-full"},[e("td",{staticClass:"n-table-cell w-full p-8",attrs:{colspan:t.form.properties.length}},[t.loading?e("loader",{staticClass:"w-4 h-4 mx-auto"}):e("p",{staticClass:"text-gray-500 text-center"},[t._v(" No data found. ")])],1)])])])},xt=[],Ct=n(wt,yt,xt,!1,null,null,null,null);const $t=Ct.exports,kt={name:"FormSubmissions",components:{ScrollShadow:L,OpenTable:$t,VSwitch:b},props:{},data(){return{formInitDone:!1,isLoading:!1,tableData:[],currentPage:1,fullyLoaded:!1,showColumnsModal:!1,properties:[],removed_properties:[],displayColumns:{},searchForm:new x({search:""})}},mounted(){this.initFormStructure(),this.getSubmissionsData()},watch:{form(){this.form!==null&&(this.initFormStructure(),this.getSubmissionsData())}},computed:{form:{get(){return this.$store.state["open/working_form"].content},set(s){this.$store.commit("open/working_form/set",s)}},exportUrl(){return this.form?"/api/open/forms/"+this.form.id+"/submissions/export":""},filteredData(){if(!this.tableData)return[];let s=d(this.tableData);if(this.searchForm.search===""||this.searchForm.search===null)return s;const t={keys:this.form.properties.map(r=>r.id)};return new w(s,t).search(this.searchForm.search).map(r=>r.item)}},methods:{initFormStructure(){if(!this.form||this.formInitDone)return;let s=!1;if(this.form.properties.forEach(e=>{e.id==="created_at"&&(s=!0)}),!s){const e=d(this.form.properties);e.push({name:"Created at",id:"created_at",type:"date",width:140}),this.$set(this.form,"properties",e)}this.formInitDone=!0,this.properties=d(this.form.properties),this.removed_properties=this.form.removed_properties?d(this.form.removed_properties):[];const t=window.localStorage.getItem("display-columns-formid-"+this.form.id);t!==null&&t?(this.displayColumns=JSON.parse(t),this.onChangeDisplayColumns()):this.form.properties.forEach(e=>{this.displayColumns[e.id]=!0})},getSubmissionsData(){!this.form||this.fullyLoaded||(this.isLoading=!0,g.get("/api/open/forms/"+this.form.id+"/submissions?page="+this.currentPage).then(s=>{const t=s.data;this.tableData=this.tableData.concat(t.data.map(e=>e.data)),this.currentPage<t.meta.last_page?(this.currentPage+=1,this.getSubmissionsData()):(this.isLoading=!1,this.fullyLoaded=!0)}).catch(s=>{console.error(s),this.isLoading=!1}))},dataChanged(){this.$refs.shadows&&(this.$refs.shadows.toggleShadow(),this.$refs.shadows.calcDimensions())},onChangeDisplayColumns(){window.localStorage.setItem("display-columns-formid-"+this.form.id,JSON.stringify(this.displayColumns));const s=this.properties.concat(this.removed_properties).filter(t=>this.displayColumns[t.id]===!0);this.$set(this.form,"properties",s)},onDeleteRecord(){this.fullyLoaded=!1,this.tableData=[],this.getSubmissionsData()}}};var St=function(){var t=this,e=t._self._c;return e("div",{staticClass:"my-4 w-full mx-auto"},[e("h3",{staticClass:"font-semibold mb-4 text-xl"},[t._v(" Form Submissions ")]),e("modal",{attrs:{show:t.showColumnsModal},on:{close:function(r){t.showColumnsModal=!1}},scopedSlots:t._u([{key:"icon",fn:function(){return[e("svg",{staticClass:"w-8 h-8",attrs:{viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M16 5H8C4.13401 5 1 8.13401 1 12C1 15.866 4.13401 19 8 19H16C19.866 19 23 15.866 23 12C23 8.13401 19.866 5 16 5Z",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"}}),e("path",{attrs:{d:"M8 15C9.65685 15 11 13.6569 11 12C11 10.3431 9.65685 9 8 9C6.34315 9 5 10.3431 5 12C5 13.6569 6.34315 15 8 15Z",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"}})])]},proxy:!0},{key:"title",fn:function(){return[t._v(" Display columns ")]},proxy:!0}])},[e("div",{staticClass:"px-4"},[t.properties.length>0?[e("h4",{staticClass:"font-bold mb-2"},[t._v("Form Fields")]),t._l(t.properties,function(r){return e("div",{key:r.id,staticClass:"p-2 border"},[t._v(" "+t._s(r.name)+" "),e("v-switch",{staticClass:"float-right",on:{input:t.onChangeDisplayColumns},model:{value:t.displayColumns[r.id],callback:function(o){t.$set(t.displayColumns,r.id,o)},expression:"displayColumns[field.id]"}})],1)})]:t._e(),t.removed_properties.length>0?[e("h4",{staticClass:"font-bold mb-2 mt-4"},[t._v("Removed Fields")]),t._l(t.removed_properties,function(r){return e("div",{key:r.id,staticClass:"p-2 border"},[t._v(" "+t._s(r.name)+" "),e("v-switch",{staticClass:"float-right",on:{input:t.onChangeDisplayColumns},model:{value:t.displayColumns[r.id],callback:function(o){t.$set(t.displayColumns,r.id,o)},expression:"displayColumns[field.id]"}})],1)})]:t._e()],2)]),!t.form||t.isLoading?e("loader",{staticClass:"h-6 w-6 text-nt-blue mx-auto"}):e("div",[e("div",{staticClass:"flex flex-wrap items-end"},[e("div",{staticClass:"flex-grow"},[e("text-input",{staticClass:"w-64",attrs:{form:t.searchForm,name:"search",placeholder:"Search..."}})],1),e("div",{staticClass:"font-semibold flex gap-4"},[t.form&&!t.isLoading&&t.formInitDone?e("p",{staticClass:"float-right text-xs uppercase mb-2"},[e("a",{staticClass:"text-gray-500",attrs:{href:"javascript:void(0);"},on:{click:function(r){t.showColumnsModal=!0}}},[t._v("Display columns")])]):t._e(),t.form&&!t.isLoading&&t.tableData.length>0?e("p",{staticClass:"text-right text-xs uppercase"},[e("a",{attrs:{href:t.exportUrl,target:"_blank"}},[t._v("Export as CSV")])]):t._e()])]),e("scroll-shadow",{ref:"shadows",staticClass:"border max-h-full h-full notion-database-renderer",attrs:{"shadow-top-offset":0,"hide-scrollbar":!0}},[e("open-table",{ref:"table",staticClass:"max-h-full",attrs:{data:t.filteredData,loading:t.isLoading},on:{resize:function(r){return t.dataChanged()},deleted:function(r){return t.onDeleteRecord()}}})],1)],1)],1)},Dt=[],Ot=n(kt,St,Dt,!1,null,null,null,null);const Ft=Ot.exports,Lt={components:{FormSubmissions:Ft},props:{form:{type:Object,required:!0}},mixins:[y],data:()=>({}),mounted(){},computed:{metaTitle(){return this.form?"Form Submissions - "+this.form.title:"Form Submissions"}},methods:{}};var Rt=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"table-page"}},[e("form-submissions")],1)},It=[],zt=n(Lt,Rt,It,!1,null,null,null,null);const Mt=zt.exports;export{Mt as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
